{"version":3,"sources":["services/storage.service.js","services/map.service.js","cmps/Map.jsx","cmps/Modal.jsx","pages/MapPage.jsx","RootCmp.js","index.js"],"names":["storageService","saveToStorage","key","val","localStorage","setItem","JSON","stringify","loadFromStorage","getItem","parse","mapService","getMarkers","addMarker","DB_KEY","gMarkers","_id","pos","lat","lng","name","a","console","log","storeMarkers","markers","length","Promise","resolve","marker","push","_MyMap","state","center","isInfoWindowOn","infoText","onMarkerClicked","ev","setState","position","onInfoWindowClose","this","props","onAddMarker","google","zoom","initialCenter","onClick","map","idx","onClose","visible","Component","MyMap","GoogleApiWrapper","apiKey","Modal","clickedPos","onToggleModal","useState","setName","className","stopPropagation","onSubmit","preventDefault","type","value","onChange","target","placeholder","autoFocus","toFixed","MapPage","isModalShown","mapProps","clickEvent","latLng","loadMarkers","RootCmp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAaA,EAAiB,CAC1BC,cAIJ,SAAuBC,EAAKC,GACxBC,aAAaC,QAAQH,EAAKI,KAAKC,UAAUJ,KAJzCK,gBAQJ,SAAyBN,GACrB,IAAIC,EAAMC,aAAaK,QAAQP,GAC/B,OAAOI,KAAKI,MAAMP,KCVf,IAAMQ,EAAa,CACtBC,W,2CACAC,U,6CAGEC,EAAS,SAETC,EAAW,CACb,CACIC,IAAK,OACLC,IAAK,CACDC,IAAK,iBACLC,IAAK,oBAETC,KAAM,YAEV,CACIJ,IAAK,OACLC,IAAK,CACDC,IAAK,kBACLC,KAAM,mBAEVC,KAAM,aAEV,CACIJ,IAAK,OACLC,IAAK,CACDC,IAAK,kBACLC,IAAK,mBAETC,KAAM,a,4CAId,8BAAAC,EAAA,6DACIC,QAAQC,IAAI,oBACNC,EAAexB,EAAeQ,gBAAgBM,GAC9CW,GAAsB,OAAZD,QAAY,IAAZA,OAAA,EAAAA,EAAcE,QAASF,EAAeT,GAClD,OAACS,QAAD,IAACA,OAAD,EAACA,EAAcE,SAAQ1B,EAAeC,cAAca,EAAQW,GAJpE,kBAKWE,QAAQC,QAAQH,IAL3B,4C,kEAQA,WAAyBI,GAAzB,eAAAR,EAAA,6DACIC,QAAQC,IAAIM,IACNJ,EAAUzB,EAAeQ,gBAAgBM,IACvCgB,KAAKD,GACb7B,EAAeC,cAAca,EAAQW,GAJzC,kBAKWE,QAAQC,WALnB,4C,wCCzCMG,E,4MACJC,MAAQ,CACNC,OAAO,GACPC,gBAAgB,EAChBC,SAAU,I,EAGZC,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CACZJ,gBAAgB,EAChBC,SAAUE,EAAGjB,KACba,OAAQI,EAAGE,Y,EAKfC,kBAAoB,WAClB,EAAKF,SAAS,CAAEJ,gBAAgB,K,4CAIlC,WAAU,IAAD,OACP,EAAwCO,KAAKC,MAArCjB,EAAR,EAAQA,QAASkB,EAAjB,EAAiBA,YAAYV,EAA7B,EAA6BA,OAC7B,OACE,eAAC,MAAD,CACEW,OAAQH,KAAKC,MAAME,OACnBC,KAAM,GACNC,cAAerB,EAAQ,GAAGR,IAC1B8B,QAASJ,EACTV,OAAQA,EALV,UAOGR,EAAQC,QACPD,EAAQuB,KAAI,SAACnB,EAAQoB,GAAT,OACV,cAAC,SAAD,CACEV,SAAUV,EAAOZ,IACjBG,KAAMS,EAAOT,KACb2B,QAAS,EAAKX,iBACTa,MAGX,cAAC,aAAD,CACEC,QAAST,KAAKD,kBACdD,SAAUE,KAAKT,MAAMC,OACrBkB,QAASV,KAAKT,MAAME,eAHtB,SAKE,8BACE,6BAAKO,KAAKT,MAAMG,sB,GA9CPiB,aAwDRC,EAAQC,2BAAiB,CACpCC,OAAQ,2CADWD,CAElBvB,G,QC3DI,SAASyB,EAAT,GAA4D,IAA3Cb,EAA0C,EAA1CA,YAAac,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,cAC/C,EAAwBC,mBAAS,IAAjC,mBAAOvC,EAAP,KAAawC,EAAb,KAOA,OACE,qBAAKC,UAAU,kBAAkBd,QAASW,EAA1C,SACE,0BAASG,UAAU,OAAOd,QAAS,SAACV,GAAD,OAAQA,EAAGyB,mBAA9C,UACI,qBAAKD,UAAU,SAASd,QAASW,IACjC,8CACF,uBAAMK,SAVZ,SAAsB1B,GACpBA,EAAG2B,iBACHrB,EAAYvB,IAQR,UACE,uBACEyC,UAAU,QACVI,KAAK,OACLC,MAAO9C,EACP+C,SAAU,SAAC9B,GAAD,OAAQuB,EAAQvB,EAAG+B,OAAOF,QACpCG,YAAY,kBACZC,WAAS,IAEX,mDAEF,sCAASb,EAAWvC,IAAIqD,QAAQ,GAAhC,YAA6Cd,EAAWtC,IAAIoD,QAAQ,GAApE,OACA,wCCtBD,IAAMC,EAAb,4MACExC,MAAQ,CACNP,QAAS,GACTgD,cAAc,EACdhB,WAAY,GACZxB,OAAO,IALX,EAqBEU,YArBF,uCAqBgB,WAAOvB,GAAP,eAAAC,EAAA,yDAEPD,EAFO,wDAGNS,EAAS,CACbT,OACAH,IAAI,EAAKe,MAAMyB,YALL,kBAQJ9C,EAAWE,UAAUgB,GARjB,OASV,EAAKS,SAAS,CAAEb,QAAQ,GAAD,mBAAM,EAAKO,MAAMP,SAAjB,CAA0BI,MACjD,EAAK6B,gBAVK,kDAYVpC,QAAQC,IAAI,sBAAZ,MAZU,0DArBhB,wDAqCEmC,cAAgB,SAACgB,EAAU1B,EAAK2B,GAC9B,GAAI,EAAK3C,MAAMyC,aAAc,OAAO,EAAKnC,SAAS,CAAEmC,cAAc,IAClE,IAAMxD,EAAM,CACVC,IAAKyD,EAAWC,OAAO1D,MACvBC,IAAKwD,EAAWC,OAAOzD,OAEzB,EAAKmB,SAAS,CAAEmB,WAAYxC,EAAKwD,cAAc,KA3CnD,8FAQE,sBAAApD,EAAA,sDACEoB,KAAKoC,cADP,gDARF,sHAYE,4BAAAxD,EAAA,+EAE0BV,EAAWC,aAFrC,OAEUa,EAFV,OAGIgB,KAAKH,SAAS,CAAEb,YAHpB,gDAKIH,QAAQC,IAAI,0BAAZ,MALJ,yDAZF,0EA8CE,WAAU,IAAD,OACP,EAAoDkB,KAAKT,MAAjDP,EAAR,EAAQA,QAAQgC,EAAhB,EAAgBA,WAAYgB,EAA5B,EAA4BA,aAAaxC,EAAzC,EAAyCA,OACzC,OACE,qCACE,yBAAS4B,UAAU,MAAnB,SACE,cAACR,EAAD,CAAO5B,QAASA,EAASkB,YAAaF,KAAKiB,cAAezB,OAAQA,MAFtE,eAKE,qBAAK4B,UAAU,cAAf,SACGpC,EAAQuB,KAAI,SAAAnB,GAAM,OAAI,sBAAMgC,UAAU,QAAQd,QAAS,kBAAI,EAAKT,SAAS,CAACL,OAAOJ,EAAOZ,OAAlE,SACrB,4BAAIY,EAAOT,cAGdqD,GAAgB,cAACjB,EAAD,CAAOb,YAAaF,KAAKE,YAAac,WAAYA,EAAYC,cAAejB,KAAKiB,uBA3D3G,GAA6BN,aCFtB,SAAS0B,IACd,OACE,0BAASjB,UAAU,UAAnB,UACE,wBAAQA,UAAU,aAAlB,SACE,6CAEF,cAAC,EAAD,IACA,wBAAQA,UAAU,kB,MCLxBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.605ee1ec.chunk.js","sourcesContent":["export const storageService = {\r\n    saveToStorage,\r\n    loadFromStorage,\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage.setItem(key, JSON.stringify(val))\r\n}\r\n\r\n\r\nfunction loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return JSON.parse(val)\r\n}","import { storageService } from \"./storage.service\"\r\n\r\nexport const mapService = {\r\n    getMarkers,\r\n    addMarker,\r\n}\r\n\r\nconst DB_KEY = 'marker'\r\n\r\nconst gMarkers = [\r\n    {\r\n        _id: 'm-01',\r\n        pos: {\r\n            lat: 32.0486561005543,\r\n            lng: 34.798752569068206,\r\n        },\r\n        name: \"Tel-Aviv\",\r\n    },\r\n    {\r\n        _id: 'm-02',\r\n        pos: {\r\n            lat: 40.74876952476417,\r\n            lng: -73.98592039347554,\r\n        },\r\n        name: \"Manhatten\",\r\n    },\r\n    {\r\n        _id: 'm-03',\r\n        pos: {\r\n            lat: 32.18442913243363,\r\n            lng: 34.86967681253942,\r\n        },\r\n        name: \"R'aanana\",\r\n    },\r\n];\r\n\r\nasync function getMarkers() {\r\n    console.log('fetching markers')\r\n    const storeMarkers = storageService.loadFromStorage(DB_KEY)\r\n    const markers = storeMarkers?.length ? storeMarkers : gMarkers\r\n    if (!storeMarkers?.length) storageService.saveToStorage(DB_KEY, markers)\r\n    return Promise.resolve(markers);\r\n}\r\n\r\nasync function addMarker(marker) {\r\n    console.log(marker)\r\n    const markers = storageService.loadFromStorage(DB_KEY)\r\n    markers.push(marker)\r\n    storageService.saveToStorage(DB_KEY, markers)\r\n    return Promise.resolve()\r\n}","import { Component } from \"react\";\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\r\n\r\nclass _MyMap extends Component {\r\n  state = {\r\n    center:{},\r\n    isInfoWindowOn: false,\r\n    infoText: \"\",\r\n  };\r\n\r\n  onMarkerClicked = (ev) => {\r\n    this.setState({\r\n      isInfoWindowOn: true,\r\n      infoText: ev.name,\r\n      center: ev.position,\r\n    });\r\n  };\r\n\r\n\r\n  onInfoWindowClose = () => {\r\n    this.setState({ isInfoWindowOn: false });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { markers, onAddMarker,center } = this.props;\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={12}\r\n        initialCenter={markers[0].pos}\r\n        onClick={onAddMarker}\r\n        center={center}\r\n      >\r\n        {markers.length &&\r\n          markers.map((marker, idx) => (\r\n            <Marker\r\n              position={marker.pos}\r\n              name={marker.name}\r\n              onClick={this.onMarkerClicked}\r\n              key={idx}\r\n            />\r\n          ))}\r\n        <InfoWindow\r\n          onClose={this.onInfoWindowClose}\r\n          position={this.state.center}\r\n          visible={this.state.isInfoWindowOn}\r\n        >\r\n          <div>\r\n            <h1>{this.state.infoText}</h1>\r\n          </div>\r\n        </InfoWindow>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n// export const changeLocation = (locIdx) => {\r\n//   this.setState({ center: markers[locIdx] });\r\n// };\r\nexport const MyMap = GoogleApiWrapper({\r\n  apiKey: \"AIzaSyBGe5qrsySPJjOhvi5C5mlAvGe2ywF8ZQg\",\r\n})(_MyMap);\r\n","import { useState } from \"react\";\r\n\r\nexport function Modal({ onAddMarker, clickedPos, onToggleModal }) {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  function handleSubmit(ev) {\r\n    ev.preventDefault();\r\n    onAddMarker(name);\r\n  }\r\n\r\n  return (\r\n    <div className=\"overlay fade-in\" onClick={onToggleModal}>\r\n      <section className=\"form\" onClick={(ev) => ev.stopPropagation()}>\r\n          <div className=\"closer\" onClick={onToggleModal}/>\r\n          <h4>Add a marker</h4>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(ev) => setName(ev.target.value)}\r\n            placeholder=\"Name the marker\"\r\n            autoFocus\r\n          />\r\n          <button>Add Marker</button>\r\n        </form>\r\n        <p>lat: {clickedPos.lat.toFixed(2)} |  lng: {clickedPos.lng.toFixed(2)} </p>\r\n        <p>  </p>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import { Component } from \"react\";\r\nimport { mapService } from \"../services/map.service\";\r\nimport { MyMap } from \"../cmps/Map\";\r\nimport { Modal } from \"../cmps/Modal\";\r\n\r\nexport class MapPage extends Component {\r\n  state = {\r\n    markers: [],\r\n    isModalShown: false,\r\n    clickedPos: {},\r\n    center:{}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.loadMarkers();\r\n  }\r\n\r\n  async loadMarkers() {\r\n    try {\r\n      const markers = await mapService.getMarkers();\r\n      this.setState({ markers });\r\n    } catch (err) {\r\n      console.log(\"error getting markers: \", err);\r\n    }\r\n  }\r\n\r\n  onAddMarker = async (name) => {\r\n    \r\n    if (!name) return;\r\n    const marker = {\r\n      name,\r\n      pos:this.state.clickedPos\r\n    };\r\n    try {\r\n      await mapService.addMarker(marker);\r\n      this.setState({ markers: [...this.state.markers, marker] });\r\n      this.onToggleModal()\r\n    } catch (err) {\r\n      console.log(\"error adding marker\", err);\r\n    }\r\n  };\r\n  \r\n  onToggleModal = (mapProps, map, clickEvent) => {\r\n    if (this.state.isModalShown) return this.setState({ isModalShown: false });\r\n    const pos = {\r\n      lat: clickEvent.latLng.lat(),\r\n      lng: clickEvent.latLng.lng(),\r\n    };\r\n    this.setState({ clickedPos: pos, isModalShown: true });\r\n  };\r\n\r\n  render() {\r\n    const { markers,clickedPos, isModalShown,center } = this.state;\r\n    return (\r\n      <>\r\n        <section className=\"map\">\r\n          <MyMap markers={markers} onAddMarker={this.onToggleModal} center={center}/>\r\n        </section>\r\n        my markers :\r\n        <div className=\"marker-list\">\r\n          {markers.map(marker => <item className=\"place\" onClick={()=>this.setState({center:marker.pos})}>\r\n            <p>{marker.name}</p>\r\n          </item>)}\r\n        </div>\r\n        {isModalShown && <Modal onAddMarker={this.onAddMarker} clickedPos={clickedPos} onToggleModal={this.onToggleModal}/>}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import {MapPage} from './pages/MapPage';\n\n\nexport function RootCmp() {\n  return (\n    <section className=\"map-app\">\n      <header className=\"app-header\">\n        <p>MapMarkers</p>\n      </header>\n      <MapPage />\n      <footer className=\"app-footer\"/>\n    </section>\n  );\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {RootCmp} from './RootCmp';\nimport './assets/css/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RootCmp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}